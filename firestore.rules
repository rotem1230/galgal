rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // אפשר למשתמשים מאומתים לקרוא מידע על עצמם מקולקציית userRoles
    match /userRoles/{email} {
      allow read: if request.auth != null && (request.auth.token.email == email || isHardcodedAdmin());
      allow write: if false; // רק דרך קונסולת הניהול או cloud functions
    }
    
    // פונקציה לבדיקה אם המשתמש הוא מנהל
    function isAdmin() {
      return request.auth != null && 
        (request.auth.token.email == 'rotemhaha321@gmail.com' || 
         request.auth.token.email == 'kfirgal505@gmail.com');
    }

    // פונקציה לבדיקה אם המסמך שייך למנהל הנוכחי
    function isOwnedByCurrentAdmin() {
      return resource.data.managedBy == request.auth.token.email;
    }

    // פונקציה לבדיקה אם המסמך החדש מוגדר כשייך למנהל הנוכחי
    function isBeingCreatedByCurrentAdmin() {
      return request.resource.data.managedBy == request.auth.token.email;
    }

    // חוקים עבור לקוחות
    match /customers/{customerId} {
      allow read: if isAdmin() && isOwnedByCurrentAdmin();
      allow list: if isAdmin() && resource.data.managedBy == request.auth.token.email;
      allow create: if isAdmin() && isBeingCreatedByCurrentAdmin();
      allow update, delete: if isAdmin() && isOwnedByCurrentAdmin();
    }
    
    // חוקים עבור הזמנות
    match /orders/{orderId} {
      allow read: if isAdmin() && isOwnedByCurrentAdmin();
      allow list: if isAdmin() && resource.data.managedBy == request.auth.token.email;
      allow create: if isAdmin() && isBeingCreatedByCurrentAdmin();
      allow update, delete: if isAdmin() && isOwnedByCurrentAdmin();
    }
    
    // חוקים עבור מוצרים - משותפים לכל המנהלים
    match /products/{productId} {
      allow read, write: if isAdmin();
    }
    
    // חוקים עבור קטגוריות - משותפות לכל המנהלים
    match /categories/{categoryId} {
      allow read, write: if isAdmin();
    }
    
    // חוקים לקולקציית מחירי לקוחות
    match /customer_pricing/{document=**} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && (isAdmin() || isHardcodedAdmin());
    }
    
    // פונקציה שמחזירה אם המשתמש הוא מנהל מערכת מוגדר בקוד
    function isHardcodedAdmin() {
      return request.auth != null && request.auth.token.email == 'rotemhaha321@gmail.com';
    }
  }
} 